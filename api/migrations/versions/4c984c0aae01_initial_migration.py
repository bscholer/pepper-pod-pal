"""Initial migration

Revision ID: 4c984c0aae01
Revises: 
Create Date: 2023-11-16 15:23:41.147746

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4c984c0aae01'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('seeds',
    sa.Column('seed_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number_of_seeds', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('seed_id')
    )
    op.create_table('hydroponic_conditions',
    sa.Column('condition_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('system_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('water_ph', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('electrical_conductivity', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('water_temperature_f', sa.Integer(), nullable=True),
    sa.Column('tds', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['system_id'], ['hydroponic_system.system_id'], ),
    sa.PrimaryKeyConstraint('condition_id')
    )
    op.create_table('plants',
    sa.Column('plant_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plant_type', sa.String(length=255), nullable=True),
    sa.Column('species', sa.String(length=255), nullable=True),
    sa.Column('variety', sa.String(length=255), nullable=True),
    sa.Column('germination_date', sa.Date(), nullable=True),
    sa.Column('hydroponic_system_id', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['hydroponic_system_id'], ['hydroponic_system.system_id'], ),
    sa.PrimaryKeyConstraint('plant_id')
    )
    op.create_table('observations',
    sa.Column('observation_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plant_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.plant_id'], ),
    sa.PrimaryKeyConstraint('observation_id')
    )
    op.create_table('plant_crosses',
    sa.Column('cross_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parent_1_id', sa.Integer(), nullable=True),
    sa.Column('parent_2_id', sa.Integer(), nullable=True),
    sa.Column('cross_date', sa.Date(), nullable=True),
    sa.Column('method', sa.String(length=255), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['parent_1_id'], ['plants.plant_id'], ),
    sa.ForeignKeyConstraint(['parent_2_id'], ['plants.plant_id'], ),
    sa.PrimaryKeyConstraint('cross_id')
    )
    op.create_table('taste_test',
    sa.Column('taste_test_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plant_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('taste', sa.String(length=255), nullable=True),
    sa.Column('texture', sa.String(length=255), nullable=True),
    sa.Column('appearance', sa.String(length=255), nullable=True),
    sa.Column('overall', sa.Integer(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.plant_id'], ),
    sa.PrimaryKeyConstraint('taste_test_id')
    )
    op.create_table('yield',
    sa.Column('yield_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plant_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('height_cm', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('leaf_count', sa.Integer(), nullable=True),
    sa.Column('color', sa.String(length=255), nullable=True),
    sa.Column('texture', sa.String(length=255), nullable=True),
    sa.Column('nutrient_level', sa.Integer(), nullable=True),
    sa.Column('photo', sa.BLOB(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.plant_id'], ),
    sa.PrimaryKeyConstraint('yield_id')
    )
    op.create_table('seed_cross',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('seed_id', sa.Integer(), nullable=True),
    sa.Column('cross_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cross_id'], ['plant_crosses.cross_id'], ),
    sa.ForeignKeyConstraint(['seed_id'], ['seeds.seed_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('seed_cross')
    op.drop_table('yield')
    op.drop_table('taste_test')
    op.drop_table('plant_crosses')
    op.drop_table('observations')
    op.drop_table('plants')
    op.drop_table('hydroponic_conditions')
    op.drop_table('seeds')
    # ### end Alembic commands ###
